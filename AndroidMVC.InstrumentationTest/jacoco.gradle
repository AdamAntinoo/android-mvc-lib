// -  T A S K S
task codeCoverageReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    dependsOn 'test'
    dependsOn 'connectedDebugAndroidTest'
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def androidExclusion = ['**/R.class',
                            '**/R$*.class',
                            '**/BuildConfig.*',
                            '**/Manifest*.*',
                            '**/android/**/*.*',
                            '**/androidx/**/*.*',
                            '**/databinding/**/*.*',
                            '**/android/databinding/*Binding.*',
                            '**/*Module*.*'
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac", excludes: androidExclusion)
    def mainSrc = ["${project.projectDir}/../AndroidMVC/src/main/java"]

    sourceDirectories = files(mainSrc)
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])
}
task getCoverage(type: Exec, dependsOn: 'codeCoverageReport') {
    group = "Reporting"
    commandLine "xdg-open", "$buildDir/reports/jacoco/codeCoverageReport/html/index.html"
}