apply plugin: 'com.android.library'
apply plugin: 'project-report'
apply plugin: 'maven'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 300
        versionName "3.0.0"
        project.archivesBaseName = "Android.MVC"
        project.version = android.defaultConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        multiDexEnabled = true
    }

    buildTypes {
        release {
            signingConfig debug.signingConfig
            debuggable false
            minifyEnabled false
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            resValue "bool", "CACHE_MVC_VIEWS_ON_CONTROLLER", "true"
        }
        debug {
            initWith release
            debuggable true
            useProguard false
            testCoverageEnabled true
        }
    }
    sourceSets {
        main.res {
            srcDirs += 'src/main/res-ui'
            srcDirs += 'src/main/res-dynamic'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
        quiet true
    }
    dexOptions {
        javaMaxHeapSize "4G"
        jumboMode true
        preDexLibraries true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        animationsDisabled true
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

// - P U B L I S H I N G
group = 'org.dimensinfin'
version = project.version
uploadArchives {
    repositories {
        mavenLocal()
    }
}
// - B U I L D   T A S K S
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

//Upload android library to maven with javadoc and android sources
configurations {
    deployerJars
}
apply from: './dependencies.gradle'
